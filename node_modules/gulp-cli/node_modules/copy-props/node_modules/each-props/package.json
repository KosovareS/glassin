{
  "name": "each-props",
  "version": "1.3.1",
  "description": "Process each properties deeply.",
  "main": "index.js",
  "files": [
    "index.js"
  ],
  "scripts": {
    "lint": "eslint .",
    "test": "mocha",
    "coverage": "istanbul cover _mocha",
    "coveralls": "istanbul cover _mocha && istanbul-coveralls",
    "web:install": "npm i phantomjs-prebuilt mocha-phantomjs",
    "web:build": "browserify index.js --standalone eachProps | uglifyjs --compress --mangle -o web/each-props.js && node test/web/make.js",
    "web:test": "mocha-phantomjs -p node_modules/.bin/phantomjs test/web/each-props.test.html"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sttk/each-props.git"
  },
  "keywords": [
    "deep",
    "each",
    "object",
    "property",
    "properties",
    "props"
  ],
  "author": {
    "name": "Takayuki Sato"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/sttk/each-props/issues"
  },
  "homepage": "https://github.com/sttk/each-props#readme",
  "dependencies": {
    "is-plain-object": "^2.0.1",
    "object.defaults": "^1.1.0"
  },
  "devDependencies": {
    "browserify": "^14.1.0",
    "chai": "^3.5.0",
    "eslint": "^3.16.1",
    "istanbul": "^0.4.5",
    "istanbul-coveralls": "^1.0.3",
    "mocha": "^3.2.0",
    "uglify-js": "^2.8.1"
  },
  "readme": "[each-props][repo-url] [![NPM][npm-img]][npm-url] [![MIT License][mit-img]][mit-url] [![Build Status][travis-img]][travis-url] [![Build Status][appveyor-img]][appveyor-url] [![Coverage Status][coverage-img]][coverage-url]\n============\n\nProcess object properties deeply.\n\nInstall\n-------\n\n```\n$ npm i each-props --save\n```\n\nUsage\n-----\n\n* Load this module :\n\n    ```js\n    const eachProps = require('each-props');\n    ```\n\n* Apply a function to all (non plain object) properties.\n\n    ```js\n    var obj = { a: 1, b: { c: 'CCC', d: { e: 'EEE' } } };\n\n    eachProps(obj, function(value, keyChain, nodeInfo) {\n      if (keyChain === 'a') {\n        nodeInfo.parent['a'] = value * 2;\n      } else if (keyChain === 'b.c') {\n        nodeInfo.parent['c'] = value.toLowerCase();\n      } else if (keyChain === 'b.d') {\n        return true; // stop to dig\n      } else if (keyChain === 'b.d.e') {\n        nodeInfo.parent['e'] = value.toLowerCase();\n      }\n    });\n    console.log(obj);\n    // => { a: 2, b: { c: 'ccc', d: { e: 'EEE' } } };\n    ```\n\nAPI\n---\n\n### eachProps(obj, callback [, opts]) => void\n\nExecutes the *callback* function for all properties.\n\n##### **Arguments :** \n\n   * **obj** [object] : A plain object to be treated.\n   * **fn** [function] : A function to treat the plain object.\n   * **opts** [object] : An object to be able to has options.\n\n##### **API of *fn* function**\n\n* ***fn(value, keyChain, nodeInfo) => boolean***\n\n    * **Arguments :**\n        * **value** [any] : The property value.\n        * **keyChain** [string] : A string concatenating the hierarchical keys with dots.\n        * **nodeInfo** [object] : An object which contains properties: `name`, `index`, `count`, `depth`, `parent`, `sort`, and can contains more properties by specifying in `opts` above. \n\n    * **Returns :** [boolean] : Stops digging child properties if `true`.\n\n##### **Properties of *nodeInfo* :**\n\n* ***nodeInfo*** *[object]*\n    * **name** [string] : The property name of this node.\n    * **index** [number] : The index of the property among the sibling properties.\n    * **count** [number] : The count of the sibling properties.\n    * **depth** [number] : The depth in the property hierarchy.\n    * **parent** [object] : The parent property.\n    * **sort** [function] : A sort function which orders the child properties. This property is inherited from **opts**, if specified.\n    * ... and any properties inherited from **opts**.\n\n##### **Properties of *opts* :**\n\n* ***opts*** *[object]*\n    * **sort** [function] : A sort function which orders the same level properties. (optional)\n    * ... and any properties you want to pass to each node.\n\nLicense\n-------\n\nCopyright (C) 2016 Takayuki Sato\n\nThis program is free software under [MIT][mit-url] License.\nSee the file LICENSE in this distribution for more details.\n\n[repo-url]: https://github.com/sttk/each-props/\n[npm-img]: https://img.shields.io/badge/npm-v1.3.1-blue.svg\n[npm-url]: https://www.npmjs.org/package/each-props/\n[mit-img]: https://img.shields.io/badge/license-MIT-green.svg\n[mit-url]: https://opensource.org/licenses.MIT\n[travis-img]: https://travis-ci.org/sttk/each-props.svg?branch=master\n[travis-url]: https://travis-ci.org/sttk/each-props\n[appveyor-img]: https://ci.appveyor.com/api/projects/status/github/sttk/each-props?branch=master&svg=true\n[appveyor-url]: https://ci.appveyor.com/project/sttk/each-props\n[coverage-img]: https://coveralls.io/repos/github/sttk/each-props/badge.svg?branch=master\n[coverage-url]: https://coveralls.io/github/sttk/each-props?branch=master\n\n",
  "readmeFilename": "README.md",
  "_id": "each-props@1.3.1",
  "dist": {
    "shasum": "97defd473abcbff619921d466252e355dd5f0303"
  },
  "_from": "each-props@^1.2.1",
  "_resolved": "https://registry.npmjs.org/each-props/-/each-props-1.3.1.tgz"
}
